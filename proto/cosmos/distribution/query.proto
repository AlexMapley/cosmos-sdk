syntax = "proto3";
package cosmos.distribution;

import "cosmos/query/pagination.proto";
import "gogoproto/gogo.proto";
import "cosmos/distribution/distribution.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/distribution/types";

service Query {
  // Params queries params of distribution module
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {}

  // ValidatorOutstandingRewards queries rewards of a validator address
  rpc ValidatorOutstandingRewards(QueryValidatorOutstandingRewardsRequest) returns (QueryValidatorOutstandingRewardsResponse) {}

  rpc DelegatorWithdrawAddress (QueryDelegatorWithdrawAddressRequest) returns (QueryDelegatorWithdrawAddressResponse) {}
}

message QueryParamsRequest { }

message QueryParamsResponse { 
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryValidatorOutstandingRewardsRequest {
  bytes validator_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 2;
}

message QueryValidatorOutstandingRewardsResponse {
  ValidatorOutstandingRewards rewards = 1 [(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryDelegatorWithdrawAddressRequest {
  bytes delegator_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}

message QueryDelegatorWithdrawAddressResponse {
  bytes withdraw_address = 1 [(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];
}
