syntax = "proto3";
package cosmos.staking;

import "cosmos/query/pagination.proto";
import "gogoproto/gogo.proto";
import "cosmos/staking/staking.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/staking/types";

// Query provides defines the gRPC querier service
service Query {
  // Validators queries all validators that match given status and
  rpc Validators (QueryValidatorsRequest) returns (QueryValidatorsResponse) {}

  // ValidatorQ queries validator info for given validator addr
  rpc ValidatorQ (QueryValidatorRequest) returns (QueryValidatorResponse) {}

  // ValidatorDelegations queries delegate info for given validator
  rpc ValidatorDelegations (QueryValidatorRequest) returns (QueryValidatorDelegationsResponse) {}

  // ValidatorUnbondingDelegations queries unbonding delegations of a validator
  rpc ValidatorUnbondingDelegations (QueryValidatorRequest) returns (QueryValidatorUnbondingDelegationsResponse) {}

  // DelegationQ queries delegate info for given validator delegator pair
  rpc DelegationQ (QueryBondParamsRequest) returns (QueryDelegationResponse) {}

  // UnbondingDelegation queries unbonding info for give validator delegator pair
  rpc UnbondingDelegation (QueryBondParamsRequest) returns (QueryUnbondingDelegationResponse) {}

   // DelegatorDelegations queries all delegations of a give delegator address
  rpc DelegatorDelegations (QueryDelegatorParamsRequest) returns (QueryDelegatorDelegationsResponse) {}
  // DelegatorUnbondingDelegations queries all unbonding delegations of a give delegator address
  rpc DelegatorUnbondingDelegations (QueryDelegatorParamsRequest) returns (QueryUnbondingDelegatorDelegationsResponse) {}

  // Redelegations queries redelegations of given address
  rpc Redelegations (QueryRedelegationsRequest) returns (QueryRedelegationsResponse) { }

  // DelegatorValidators queries all validator info for given delegator address
  rpc DelegatorValidators (QueryDelegatorParamsRequest) returns (QueryDelegatorValidatorsResponse) { }

  // DelegatorValidator queries validator info for given delegator validator pair
  rpc DelegatorValidator (QueryBondParamsRequest) returns (QueryDelegatorValidatorResponse) { }

  // HistoricalInfo queries the historical info for given height
  rpc HistoricalInfo (QueryHistoricalInfoRequest) returns (QueryHistoricalInfoResponse) { }

  // Pool queries the pool info
  rpc Pool (QueryPoolRequest) returns (QueryPoolResponse) { }

  // Parameters queries the staking parameters
  rpc Parameters (QueryParametersRequest) returns (QueryParametersResponse) { }
}

// QueryValidatorsRequest is request type for Query/Validators RPC method
message QueryValidatorsRequest{
  string status = 1;

  cosmos.query.PageRequest req = 2;
}

// QueryValidatorsResponse is response type for the Query/Validators RPC method
message QueryValidatorsResponse {
  repeated cosmos.staking.Validator validators = 1 [(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

// QueryValidatorRequest is response type for the Query/Validator RPC method
message QueryValidatorRequest{
  bytes validator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 2;
}

// QueryValidatorResponse is response type for the Query/Validator RPC method
message QueryValidatorResponse{
  cosmos.staking.Validator validator = 1[(gogoproto.nullable) = false];
}

// QueryValidatorDelegationsRequest is response type for the Query/ValidatorDelegations RPC method
message QueryValidatorDelegationsResponse{
  repeated cosmos.staking.DelegationResponse delegation_responses = 1 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "DelegationResponses"];

  cosmos.query.PageResponse res = 2;
}

// QueryValidatorUnbondingDelegationsResponse is response type for the Query/ValidatorUnbondingDelegations RPC method
message QueryValidatorUnbondingDelegationsResponse{
  repeated cosmos.staking.UnbondingDelegation unbonding_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

// QueryBondParamsRequest is request type for the Query/Delegation RPC method
message QueryBondParamsRequest{
  bytes delegator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  bytes validator_addr = 2[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 3;
}

// QueryDelegationResponse is response type for the Query/DelegationQ RPC method
message QueryDelegationResponse{
  cosmos.staking.DelegationResponse delegation_response = 1  [(gogoproto.casttype) = "DelegationResponse"];
}

// QueryDelegationResponse is response type for the Query/UnbondingDelegation RPC method
message QueryUnbondingDelegationResponse{
  cosmos.staking.UnbondingDelegation unbond =1[(gogoproto.nullable) = false];
}

// QueryDelegatorParamsRequest is request type for the Query/DeleatorDelegations RPC method
message QueryDelegatorParamsRequest{
  bytes delegator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  cosmos.query.PageRequest req = 2;
}

// QueryDelegatorDelegationsResponse is response type for the Query/DelegatorDelegations RPC method
message QueryDelegatorDelegationsResponse{
  repeated cosmos.staking.DelegationResponse delegation_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

// QueryUnbondingDelegatorDelegationsResponse is response type for the Query/UnbondingDelegatorDelegations RPC method
message QueryUnbondingDelegatorDelegationsResponse{
  repeated cosmos.staking.UnbondingDelegation unbonding_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

// QueryRedelegationsRequest is request type for the Query/Redelegations RPC method
message QueryRedelegationsRequest{
  bytes delegator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  bytes src_validator_addr = 2[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  bytes dst_validator_addr = 3[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 4;
}

// QueryRedelegationsResponse is response type for the Query/Redelegations RPC method
message QueryRedelegationsResponse{
  repeated cosmos.staking.RedelegationResponse redelegation_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

// QueryDelegatorValidatorsResponse is response type for the Query/DelegatorValidators RPC method
message QueryDelegatorValidatorsResponse{
  repeated cosmos.staking.Validator validators = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

// QueryDelegatorValidatorResponse response type for the Query/DelegatorValidator RPC method
message QueryDelegatorValidatorResponse{
  cosmos.staking.Validator validator = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2[(gogoproto.nullable) = false];
}

// QueryHistoricalInfoRequest is request type for the Query/HistoricalInfo RPC method
message QueryHistoricalInfoRequest{
  int64 height = 1;
}

// QueryHistoricalInfoResponse is response type for the Query/HistoricalInfo RPC method
message QueryHistoricalInfoResponse{
  cosmos.staking.HistoricalInfo hist = 1;
}

// QueryPoolRequest is request type for the Query/Pool RPC method
message QueryPoolRequest{ }

// QueryPoolResponse is response type for the Query/Pool RPC method
message QueryPoolResponse{
  cosmos.staking.Pool pool = 1[(gogoproto.nullable) = false];
}

// QueryParametersRequest is request type for the Query/Parameters RPC method
message QueryParametersRequest{ }

// QueryParametersResponse is response type for the Query/Parameters RPC method
message QueryParametersResponse{
  cosmos.staking.Params params = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}