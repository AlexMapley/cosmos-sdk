syntax = "proto3";
package cosmos.staking;

import "cosmos/query/pagination.proto";
import "gogoproto/gogo.proto";
import "cosmos/staking/staking.proto";

option go_package = "github.com/cosmos/cosmos-sdk/x/staking/types";

// TODO: Add docs for each
// Query provides defines the gRPC querier service
service Query {
  rpc Validators (QueryValidatorsRequest) returns (QueryValidatorsResponse) {}

  rpc ValidatorQ (QueryValidatorRequest) returns (QueryValidatorResponse) {}

  rpc ValidatorDelegations (QueryValidatorRequest) returns (QueryValidatorDelegationsResponse) {}

  rpc ValidatorUnbondingDelegations (QueryValidatorRequest) returns (QueryValidatorUnbondingDelegationsResponse) {}

  rpc DelegationQ (QueryBondParamsRequest) returns (QueryDelegationResponse) {}

  rpc UnbondingDelegation (QueryBondParamsRequest) returns (QueryUnbondingDelegationResponse) {}

  rpc DelegatorDelegations (QueryDelegatorParamsRequest) returns (QueryDelegatorDelegationsResponse) {}

  rpc DelegatorUnbondingDelegations (QueryDelegatorParamsRequest) returns (QueryUnbondingDelegatorDelegationsResponse) {}

  rpc Redelegations (QueryRedelegationsRequest) returns (QueryRedelegationsResponse) { }

  rpc DelegatorValidators (QueryDelegatorParamsRequest) returns (QueryDelegatorValidatorsResponse) { }

  rpc DelegatorValidator (QueryBondParamsRequest) returns (QueryDelegatorValidatorResponse) { }

  rpc HistoricalInfo (QueryHistoricalInfoRequest) returns (QueryHistoricalInfoResponse) { }

  rpc Pool (QueryPoolRequest) returns (QueryPoolResponse) { }

  rpc Parameters (QueryParametersRequest) returns (QueryParametersResponse) { }
}

message QueryValidatorsRequest{
  string status = 1;

  cosmos.query.PageRequest req = 2;
}

message QueryValidatorsResponse {
  repeated cosmos.staking.Validator validators = 1 [(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryValidatorRequest{
  bytes validator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 2;
}

message QueryValidatorResponse{
  cosmos.staking.Validator validator = 1[(gogoproto.nullable) = false];
}

message QueryValidatorDelegationsResponse{

  repeated cosmos.staking.DelegationResponse delegation_responses = 1 [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "DelegationResponses"];

  cosmos.query.PageResponse res = 2;
}

message QueryValidatorUnbondingDelegationsResponse{
  repeated cosmos.staking.UnbondingDelegation unbonding_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryBondParamsRequest{
  bytes delegator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  bytes validator_addr = 2[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 3;
}

message QueryDelegationResponse{
  cosmos.staking.DelegationResponse delegation_response = 1  [(gogoproto.casttype) = "DelegationResponse"];
}

message QueryUnbondingDelegationResponse{
  cosmos.staking.UnbondingDelegation unbond =1[(gogoproto.nullable) = false];
}

message QueryDelegatorParamsRequest{
  bytes delegator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  cosmos.query.PageRequest req = 2;
}

message QueryDelegatorDelegationsResponse{
  repeated cosmos.staking.DelegationResponse delegation_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryUnbondingDelegatorDelegationsResponse{
  repeated cosmos.staking.UnbondingDelegation unbonding_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryRedelegationsRequest{
  bytes delegator_addr = 1[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress"];

  bytes src_validator_addr = 2[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  bytes dst_validator_addr = 3[(gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.ValAddress"];

  cosmos.query.PageRequest req = 4;
}

message QueryRedelegationsResponse{
  repeated cosmos.staking.RedelegationResponse redelegation_responses = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryDelegatorValidatorsResponse{
  repeated cosmos.staking.Validator validators = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}

message QueryDelegatorValidatorResponse{
  cosmos.staking.Validator validator = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2[(gogoproto.nullable) = false];
}

message QueryHistoricalInfoRequest{
  int64 height = 1;
}

message QueryHistoricalInfoResponse{
  cosmos.staking.HistoricalInfo hist = 1;
}

message QueryPoolRequest{ }

message QueryPoolResponse{
  cosmos.staking.Pool pool = 1[(gogoproto.nullable) = false];
}

message QueryParametersRequest{ }

message QueryParametersResponse{
  cosmos.staking.Params params = 1[(gogoproto.nullable) = false];

  cosmos.query.PageResponse res = 2;
}